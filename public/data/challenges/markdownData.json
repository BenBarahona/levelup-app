[
  {
    "id": "ERC20",
    "name": "ERC20 Basics",
    "index": 1,
    "level": 1,
    "website": "https://github.com/LevelUpWeb3/ERC20-Challenge",
    "summary": "Introduction to implementing a basic ERC20 token with minting, burning, transferring, and approving functionalities.",
    "heroImage": "/images/level-up-preview.png",
    "labels": [
      "DeFi"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {ContentCopy} = _components;\n  if (!ContentCopy) _missingMdxReference(\"ContentCopy\", true, \"23:1-65:26\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"ERC20 Basics\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If you haven't completed the Simple Token Swap challenge yet, check it out \", _jsxDEV(_components.a, {\n        href: \"https://www.levelup.xyz/challenges/simple-token-swap\",\n        children: \"here\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 6,\n        columnNumber: 76\n      }, this), \"!\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Most of you are probably familiar with tokens like WETH, USDT, USDC, and many others. Did you know that all of these tokens are designed by following the ERC20 standard?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In this challenge, you will implement a basic ERC20 token contract that includes minting, burning, transferring, and approving functionalities.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Objective\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Your task is to:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Develop your own ERC20 token.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 15,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"Deploy it to Scroll Sepolia Testnet.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"And finally verify it.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 17,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If you need help with using a smart contract framework for completing this challenge, the \", _jsxDEV(_components.a, {\n        href: \"https://www.levelup.xyz/content/level-up-foundry\",\n        children: \"Level Up: Build with Foundry\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 19,\n        columnNumber: 91\n      }, this), \" guide might be a helpful start!\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If you get stuck, feel free to ask for help in \", _jsxDEV(_components.a, {\n        href: \"https://t.me/+PdNbk5milo1mMTAy\",\n        children: \"Level Up Telegram group\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 21,\n        columnNumber: 48\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ContentCopy, {\n      code: `// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n// Define your ERC20 token contract\ncontract MyToken is ERC20 {\n    // Define the global variables for balances, total supply, name, and symbol below\n\n    // Constructor that mints the initial supply to the deployer of the contract\n    constructor(uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {\n        // Mint the initial supply of tokens to the deployer's address\n    }\n\n    // Function to mint new tokens to a specified address\n    function mint(address to, uint256 amount) public {\n        // Implement the mint function using the _mint internal function\n    }\n\n    // Function to burn tokens from a specified address\n    function burn(address from, uint256 amount) public {\n        // Implement the burn function using the _burn internal function\n    }\n\n    // Function to transfer tokens from the caller's address to a specified address\n    function transfer(address to, uint256 amount) public override returns (bool) {\n        // Implement the transfer function using the _transfer internal function\n    }\n\n    // Function to approve an address to spend a certain amount of tokens on behalf of the caller\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        // Implement the approve function using the _approve internal function\n    }\n\n    // Function to transfer tokens from one address to another using an allowance\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\n        // Implement the transferFrom function using the _transfer and _approve internal functions\n    }\n\n    function getBalanceOf(address account) public view returns (uint256) {\n        // Implement the getBalanceOf function\n    }\n}`,\n      language: \"solidity\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Instructions\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 67,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Constructor:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 69,\n            columnNumber: 4\n          }, this), \" The constructor should initialize the ERC20 token by minting the \", _jsxDEV(_components.code, {\n            children: \"initialSupply\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 69,\n            columnNumber: 86\n          }, this), \" to the deployer's address. Use the \", _jsxDEV(_components.code, {\n            children: \"_mint\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 69,\n            columnNumber: 137\n          }, this), \" function provided by the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 69,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 69,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Mint Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 71,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"mint\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 71,\n            columnNumber: 37\n          }, this), \" function, which should allow you to create new tokens and assign them to a specific address. This function should call the \", _jsxDEV(_components.code, {\n            children: \"_mint\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 71,\n            columnNumber: 167\n          }, this), \" function provided by the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 71,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 71,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Burn Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 73,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"burn\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 73,\n            columnNumber: 37\n          }, this), \" function, which should allow you to destroy tokens from a specific address, reducing the total supply. Use the \", _jsxDEV(_components.code, {\n            children: \"_burn\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 73,\n            columnNumber: 155\n          }, this), \" function provided by the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 73,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 73,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Transfer Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 75,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"transfer\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 75,\n            columnNumber: 41\n          }, this), \" function to allow the caller to send tokens to another address. Override the \", _jsxDEV(_components.code, {\n            children: \"transfer\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 75,\n            columnNumber: 129\n          }, this), \" function and use the \", _jsxDEV(_components.code, {\n            children: \"_transfer\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 75,\n            columnNumber: 161\n          }, this), \" function from the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 75,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 75,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Approve Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 77,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 77,\n            columnNumber: 40\n          }, this), \" function, allowing the caller to authorize another address to spend a certain amount of tokens on their behalf. Override the \", _jsxDEV(_components.code, {\n            children: \"approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 77,\n            columnNumber: 175\n          }, this), \" function and use the \", _jsxDEV(_components.code, {\n            children: \"_approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 77,\n            columnNumber: 206\n          }, this), \" function from the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 77,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 77,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"TransferFrom Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 79,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"transferFrom\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 79,\n            columnNumber: 45\n          }, this), \" function to allow a spender to transfer tokens from one address to another, using an allowance set by the \", _jsxDEV(_components.code, {\n            children: \"approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 79,\n            columnNumber: 166\n          }, this), \" function. Override the \", _jsxDEV(_components.code, {\n            children: \"transferFrom\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 79,\n            columnNumber: 199\n          }, this), \" function and use the \", _jsxDEV(_components.code, {\n            children: \"_transfer\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 79,\n            columnNumber: 235\n          }, this), \" and \", _jsxDEV(_components.code, {\n            children: \"_approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 79,\n            columnNumber: 251\n          }, this), \" functions to implement this functionality.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 79,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 79,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 69,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n",
      "frontmatter": {},
      "scope": {}
    }
  },
  {
    "id": "simple-token-swap",
    "name": "Simple Token Swap",
    "index": 2,
    "level": 2,
    "website": "https://github.com/LevelUpWeb3/SimpleTokenSwap-Challenge",
    "summary": "Introduction to implementing a simple token swap contract by understanding Uniswap swap function.",
    "heroImage": "/images/level-up-preview.png",
    "labels": [
      "DeFi"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    em: \"em\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {ContentCopy} = _components;\n  if (!ContentCopy) _missingMdxReference(\"ContentCopy\", true, \"23:1-50:26\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Simple Token Swap\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If you haven't completed the ERC20 basic challenge yet, check it out \", _jsxDEV(_components.a, {\n        href: \"https://www.levelup.xyz/challenges/ERC20\",\n        children: \"here\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 6,\n        columnNumber: 70\n      }, this), \"!\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"You have now grasped the functionality of ERC20 tokens. Ever wondered how you can use these tokens to swap to another token for decentralized finance use cases (i.e WETH to USDC)?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In this challenge, you will implement a simple Uniswap token swap contract.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Objective\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Your task is to:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Develop your own contract with Swap functionality.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 15,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"Deploy it to Scroll Sepolia Testnet.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"And finally verify it.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 17,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If you need help with using a smart contract framework for completing this challenge, the \", _jsxDEV(_components.a, {\n        href: \"https://www.levelup.xyz/content/level-up-foundry\",\n        children: \"Level Up: Build with Foundry\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 19,\n        columnNumber: 91\n      }, this), \" guide might be a helpful start!\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If you get stuck, feel free to ask for help in \", _jsxDEV(_components.a, {\n        href: \"https://t.me/+PdNbk5milo1mMTAy\",\n        children: \"Level Up Telegram group\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 21,\n        columnNumber: 48\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ContentCopy, {\n      code: `// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n// Implement Uniswap swap interface\n// Implement library to help with token transfers\n\ncontract SimpleTokenSwap {\n// Define the Uniswap Router address and the WETH address variable\n\n    // Define the constructor\n    constructor(...) {\n        // Initialize the addresses\n    }\n\n    // Create a swap function that takes input and output token addresses,\n    // the input amount, the minimum output amount, and the recipient's address\n    function swap(\n        ...\n    ) external {\n        // Transfer the input tokens from the sender to the contract\n\n        // Approve the Uniswap router to spend the input tokens\n\n        // Define the exact input swapping path to swap maximum amount of receiving token\n\n        // Call the Uniswap router's exactInputSingle function to execute the swap\n    }\n}`,\n      language: \"solidity\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Constant Product Formula\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The constant product formula is used to calculate how much token B will be received by a user who sends \", _jsxDEV(_components.em, {\n        children: \"a\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 54,\n        columnNumber: 105\n      }, this), \" amount of token A:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 54,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-latex\",\n        children: \"a · b = k\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 56,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Here;\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 60,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.em, {\n          children: \"a\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 62,\n          columnNumber: 3\n        }, this), \" denotes the amount of token A,\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 62,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.em, {\n          children: \"b\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 63,\n          columnNumber: 3\n        }, this), \" denotes the amount of token B, and\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 63,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.em, {\n          children: \"k\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 64,\n          columnNumber: 3\n        }, this), \" is a constant (always).\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 64,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"How does it work?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's say Alice wants to swap her 1 ETH to DAI.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Alice goes to ETH/DAI pool.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 70,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"For the sake of simplicity, let us assume there are 10 ETH and 25,000 DAI in the pool. Therefore\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 72,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-latex\",\n        children: \"  k = (10) × (25,000) = (250,000)\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 73,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 73,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Alice sends her 1 ETH to the pool.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 77,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Now, the pool has 11 ETH and 25,000 DAI.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 79,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"The pool sends such amount of DAI to Alice that \", _jsxDEV(_components.em, {\n          children: \"k\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 80,\n          columnNumber: 51\n        }, this), \" remains constant.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 80,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 79,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-latex\",\n        children: \"  (11) × (25,000 - amountDAI) = 250,000\\n  amountDAI = 2,272.73\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 81,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 81,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Alice receives 2,272.73 DAI for 1 ETH she had.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 86,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 86,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Now the pool has 11 ETH and 22,727.27 DAI.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 88,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"If you multiply these two numbers, you get the same \", _jsxDEV(_components.em, {\n          children: \"k=250,000\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 89,\n          columnNumber: 55\n        }, this), \".\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 89,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 88,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: [\"The Essence of the \", _jsxDEV(_components.code, {\n        children: \"exactInputSingle()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 91,\n        columnNumber: 23\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 91,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ContentCopy, {\n      code: `ISwapRouter.ExactInputSingleParams memory params =\nISwapRouter.ExactInputSingleParams({\n    tokenIn: ABC,\n    tokenOut: WETH\n    fee: poolFee,\n    recipient: msg.sender,\n    deadline: block.timestamp,\n    amountIn: amountIn,\n    amountOutMinimum: 0,\n    sqrtPriceLimitX96: 0\n});\n\n// The call to exactInputSingle executes the swap.\namountOut = swapRouter.exactInputSingle(params);`,\n      language: \"solidity\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 93,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Swaps an exact amount of input tokens for as many output tokens as possible. The first element of path is the input token (ABC), the last is the output token (WETH).\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 110,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Key Point\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 112,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"As you will use an external function from Uniswap Router, you need to know what kind of new types are needed to implement. Understanding the structs for the respective swap function is crucial.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 114,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 114,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Build the Contract\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 116,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: \"As you'll use Uniswap Router, you need to define the contract address of it.\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 118,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 118,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: \"Implement the Uniswap swap interface.\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 119,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 119,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: \"Implement a library to help with token transfers.\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 120,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 120,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: \"Build the function:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 121,\n          columnNumber: 4\n        }, this), \"\\n\", _jsxDEV(_components.p, {\n          children: \"a. Transfer input tokens from sender to this contract.\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 123,\n          columnNumber: 4\n        }, this), \"\\n\", _jsxDEV(_components.p, {\n          children: \"b. Recall from the ERC20 mission that you need token approval.\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 125,\n          columnNumber: 4\n        }, this), \"\\n\", _jsxDEV(_components.p, {\n          children: \"c. Define the exact input swapping path to swap maximum amount of receiving token.\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 127,\n          columnNumber: 4\n        }, this), \"\\n\", _jsxDEV(_components.p, {\n          children: [\"d. Call \", _jsxDEV(_components.code, {\n            children: \"exactInputSingle()\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 129,\n            columnNumber: 12\n          }, this), \" to execute the swap\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 129,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 118,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Further Reading\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 132,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: _jsxDEV(_components.a, {\n          href: \"https://medium.com/@arbnom/navigating-the-defi-landscape-a-comprehensive-deep-dive-to-amms-954020ec23b\",\n          children: \"A Comprehensive Deep Dive to AMMs\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 134,\n          columnNumber: 4\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 134,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: _jsxDEV(_components.a, {\n          href: \"https://docs.uniswap.org/contracts/v4/overview\",\n          children: \"Overview of Uniswap\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 135,\n          columnNumber: 4\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 135,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 134,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n",
      "frontmatter": {},
      "scope": {}
    }
  },
  {
    "id": "simple-lending",
    "name": "Simple Lending",
    "index": 3,
    "level": 3,
    "website": "https://github.com/LevelUpWeb3/SimpleTokenSwap-Challenge",
    "summary": "Introduction to implementing a simple token swap contract by understanding Uniswap swap function.",
    "heroImage": "/images/level-up-preview.png",
    "labels": [
      "DeFi"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    ul: \"ul\",\n    strong: \"strong\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components), {ContentCopy} = _components;\n  if (!ContentCopy) _missingMdxReference(\"ContentCopy\", true, \"23:1-104:26\");\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Simple Lending\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If you haven't completed the Token Swap challenge yet, check it out \", _jsxDEV(_components.a, {\n        href: \"https://www.levelup.xyz/challenges/simple-token-swap\",\n        children: \"here\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 6,\n        columnNumber: 69\n      }, this), \"!\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's take a step further and dive into another core DeFi primitive, lending. Aave is one of the top protocols, securing billions in assets. Let's learn how to earn yield by lending through smart contracts.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In this challenge, you'll implement a contract that deposits into Aave pools on your behalf. You'll also be able to withdraw your supplied tokens along with the earned rewards.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Objective\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Your task is to:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"Develop your own contract with \", _jsxDEV(_components.code, {\n          children: \"deposit\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 15,\n          columnNumber: 35\n        }, this), \" and \", _jsxDEV(_components.code, {\n          children: \"withdraw\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 15,\n          columnNumber: 49\n        }, this), \" functionalities based on the provided base contract.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 15,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"Deploy it to Scroll Sepolia Testnet.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 16,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"And finally verify it.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 17,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If you need help with using a smart contract framework for completing this challenge, the \", _jsxDEV(_components.a, {\n        href: \"https://www.levelup.xyz/content/level-up-foundry\",\n        children: \"Level Up: Build with Foundry\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 19,\n        columnNumber: 91\n      }, this), \" guide might be a helpful start!\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"If you get stuck, feel free to ask for help in \", _jsxDEV(_components.a, {\n        href: \"https://t.me/+PdNbk5milo1mMTAy\",\n        children: \"Level Up Telegram group\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 21,\n        columnNumber: 48\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(ContentCopy, {\n      code: `// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n// In this example, the DataTypes library is used to query the AToken address that corresponds DAI\n// Later, we will use the getReserveData that will return a ReserveData object.  \n// Aave docs: https://docs.aave.com/developers/core-contracts/pool#getreservedata\nlibrary DataTypes {\n  struct ReserveConfigurationMap {\n    uint256 data;\n  }\n\n  struct ReserveData {\n    ReserveConfigurationMap configuration;\n    uint128 liquidityIndex;\n    uint128 currentLiquidityRate;\n    uint128 variableBorrowIndex;\n    uint128 currentVariableBorrowRate;\n    uint128 currentStableBorrowRate;\n    uint40 lastUpdateTimestamp;\n    uint16 id;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    address interestRateStrategyAddress;\n    uint128 accruedToTreasury;\n    uint128 unbacked;\n    uint128 isolationModeTotalDebt;\n  }\n}\n\n// IPool is the main AAVE interface exposed to users, the most notable functions are borrow, supply and withdraw\n// AAVE docs: https://docs.aave.com/developers/core-contracts/pool\ninterface IPool {\n    function supply(\n        address asset,\n        uint256 amount,\n        address onBehalfOf,\n        uint16 referralCode) external;\n\n    function withdraw(\n        address asset,\n        uint256 amount,\n        address to) external returns (uint256);\n\n    function getReserveData(\n        address asset) external view returns (DataTypes.ReserveData memory);\n}\n\n// ERC20 interface used to interact with the staking token, which is DAI on this tutorial\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// This contract acts as a proxy to earn yield on AAVE. It can be used seamlessly on the background on\n// a variety of contexts such as auctions, DAO treasuries, lotteries, etc...\ncontract AaveLender {\n    // AAVE Pool Address, depolyed on Scroll Sepolia at 0x48914C788295b5db23aF2b5F0B3BE775C4eA9440\n    address public immutable AAVE_POOL_ADDRESS = 0x48914C788295b5db23aF2b5F0B3BE775C4eA9440;\n    // In this example we will stake DAI, but any ERC20 supported by AAVE can be also used\n    address public immutable STAKED_TOKEN_ADDRESS = 0x7984E363c38b590bB4CA35aEd5133Ef2c6619C40;\n\n    // Function that stakes DAI and lends it on the background\n    function stake(uint amount) public {\n      ...\n      // 1. Transfer the DAI tokens to be deposited into this contract\n      // 2. Allow (or approve) the Aave Pool contract so it can manage the deposited DAI tokens\n      // 3. Call the supply function in the Aave Pool on behalf of the transaction sender\n    }\n\n    // Every user is able to unstake the exact amount it has staked, all the yield generated by AAVE will go the Owner\n    function withdraw(uint amount) public {\n      ...\n      // 1. Transfer the aDAI token (The AToken) to be withdrawn (notice you will need to get the aDAI token address beforehand)\n      // 2. Allow (or approve) the Aave Pool contract so it can manage the deposited aDAI tokens\n      // 3. Call the withdraw function so the the sender recieves the DAI back\n    }\n}`,\n      language: \"solidity\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Supply, Withdraw, Borrow, and Repay\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 106,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"These are the four core functions in the Aave protocol:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 108,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Supply:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 110,\n          columnNumber: 3\n        }, this), \" Lend tokens by depositing them into the Aave Pool.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 110,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Withdraw:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 111,\n          columnNumber: 3\n        }, this), \" Retrieve your supplied tokens along with any earned rewards.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 111,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Borrow:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 112,\n          columnNumber: 3\n        }, this), \" Borrow tokens from the pool.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 112,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"Repay:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 113,\n          columnNumber: 3\n        }, this), \" Pay back the borrowed tokens plus interest.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 113,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 110,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"In this challenge, we will focus on the \", _jsxDEV(_components.code, {\n        children: \"supply\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 115,\n        columnNumber: 41\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"withdraw\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 115,\n        columnNumber: 54\n      }, this), \" functions.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 115,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"AToken: Aave's ERC20 Token Standard\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 117,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"When you \", _jsxDEV(_components.code, {\n        children: \"supply\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 119,\n        columnNumber: 10\n      }, this), \" tokens to Aave, you receive ATokens as a receipt. For example, if you deposit \", _jsxDEV(_components.code, {\n        children: \"10 DAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 119,\n        columnNumber: 97\n      }, this), \" into the Aave Pool, you will get \", _jsxDEV(_components.code, {\n        children: \"10 aDAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 119,\n        columnNumber: 139\n      }, this), \" in return. This token tracks how much you supplied and the yield you've earned, so when you \", _jsxDEV(_components.code, {\n        children: \"withdraw\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 119,\n        columnNumber: 241\n      }, this), \", you receive your tokens along with any accrued rewards.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 119,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"For instance, if you deposit \", _jsxDEV(_components.code, {\n        children: \"10 DAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 30\n      }, this), \" today, you immediately receive \", _jsxDEV(_components.code, {\n        children: \"10 aDAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 70\n      }, this), \". After several blocks, your \", _jsxDEV(_components.code, {\n        children: \"10 aDAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 108\n      }, this), \" might become \", _jsxDEV(_components.code, {\n        children: \"11 aDAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 131\n      }, this), \". When you \", _jsxDEV(_components.code, {\n        children: \"withdraw\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 151\n      }, this), \", you return your \", _jsxDEV(_components.code, {\n        children: \"11 aDAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 179\n      }, this), \" and receive \", _jsxDEV(_components.code, {\n        children: \"11 DAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 201\n      }, this), \", earning a \", _jsxDEV(_components.code, {\n        children: \"1 DAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 121,\n        columnNumber: 221\n      }, this), \" profit.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 121,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"ATokens use rebase functionality, making it easy for users to track their earnings without manual interaction.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 123,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"What is a Rebase Token?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 125,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Rebase tokens, like ATokens, fully comply with the ERC20 standard but with a twist. They include a mechanism that adjusts all holders' balances proportionally based on a variable called \", _jsxDEV(_components.code, {\n        children: \"RATE\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 127,\n        columnNumber: 187\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 127,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Typically, the \", _jsxDEV(_components.code, {\n        children: \"balanceOf()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 129,\n        columnNumber: 16\n      }, this), \" function in ERC20 looks like this:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 129,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-solidity\",\n        children: \"balanceOf(x) = balances[x]\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 131,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 131,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"In rebase tokens, the \", _jsxDEV(_components.code, {\n        children: \"RATE\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 135,\n        columnNumber: 23\n      }, this), \" variable modifies this:\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 135,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-solidity\",\n        children: \"balanceOf(x) = sharesOf(x) * RATE\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 137,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 137,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Here:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 141,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.code, {\n          children: \"sharesOf(x)\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 142,\n          columnNumber: 3\n        }, this), \" also called \\\"fragments\\\", represents the amount of tokens a holder has in proportion to the rest.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 142,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.code, {\n          children: \"RATE\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 143,\n          columnNumber: 3\n        }, this), \" is a variable that adjusts to distribute rewards evenly across all holders.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 143,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 142,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This allows the protocol to efficiently distribute rewards, and users can simply check their AToken balance to see how much they've earned without needing to interact further.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 145,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"supply()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 147,\n        columnNumber: 8\n      }, this), \" Function\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 147,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"In this challenge, the \", _jsxDEV(_components.code, {\n        children: \"deposit\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 149,\n        columnNumber: 24\n      }, this), \" function in your smart contract will call the \", _jsxDEV(_components.code, {\n        children: \"supply\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 149,\n        columnNumber: 80\n      }, this), \" function to deposit \", _jsxDEV(_components.code, {\n        children: \"DAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 149,\n        columnNumber: 109\n      }, this), \" into the Aave pool. In return, the user will receive an equivalent amount of \", _jsxDEV(_components.code, {\n        children: \"aDAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 149,\n        columnNumber: 192\n      }, this), \".\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 149,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-solidity\",\n        children: \"function supply(\\n  address asset,\\n  uint256 amount,\\n  address onBehalfOf,\\n  uint16 referralCode\\n) external;\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 151,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 151,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"asset:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 160,\n          columnNumber: 3\n        }, this), \" The token being deposited into the pool (we’ll use DAI in this challenge).\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 160,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"amount:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 161,\n          columnNumber: 3\n        }, this), \" The amount of the \", _jsxDEV(_components.code, {\n          children: \"asset\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 161,\n          columnNumber: 33\n        }, this), \" being deposited, in wei.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 161,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"onBehalfOf:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 162,\n          columnNumber: 3\n        }, this), \" The address that will receive the ATokens.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 162,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"referralCode:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 163,\n          columnNumber: 3\n        }, this), \" A code for third-party integrations. For this challenge, set it to 0.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 163,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 160,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"withdraw()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 165,\n        columnNumber: 8\n      }, this), \" Function\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 165,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"The \", _jsxDEV(_components.code, {\n        children: \"withdraw\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 167,\n        columnNumber: 5\n      }, this), \" function will transfer the user's \", _jsxDEV(_components.code, {\n        children: \"aDAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 167,\n        columnNumber: 50\n      }, this), \" back to the Aave pool, allowing them to receive their \", _jsxDEV(_components.code, {\n        children: \"DAI\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 167,\n        columnNumber: 111\n      }, this), \" along with any earned interest.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 167,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-solidity\",\n        children: \"function withdraw(\\n  address asset,\\n  uint256 amount,\\n  address to\\n) external returns (uint256);\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 169,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 169,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"asset:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 177,\n          columnNumber: 3\n        }, this), \" The underlying asset being withdrawn from the pool (in this case, DAI, not the AToken).\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 177,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"amount:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 178,\n          columnNumber: 3\n        }, this), \" The amount of the \", _jsxDEV(_components.code, {\n          children: \"asset\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 178,\n          columnNumber: 33\n        }, this), \" being withdrawn, in wei.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 178,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [_jsxDEV(_components.strong, {\n          children: \"to:\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 179,\n          columnNumber: 3\n        }, this), \" The address that will receive the tokens.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 179,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 177,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: [\"Retrieving the AToken Address with \", _jsxDEV(_components.code, {\n        children: \"getReserveData()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 181,\n        columnNumber: 39\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 181,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [\"Each ERC20 token supported by Aave has a corresponding AToken. You can find the address of the AToken by calling the \", _jsxDEV(_components.code, {\n        children: \"getReserveData()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 183,\n        columnNumber: 118\n      }, this), \" function, which returns the aTokenAddress along with other details about the token pool. You'll need this address to manage funds in the withdraw function.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 183,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-solidity\",\n        children: \"ISwapRouter.ExactInputSingleParamsIPool(AAVE_POOL_ADDRESS)\\n  .getReserveData(STAKED_TOKEN_ADDRESS)\\n  .aTokenAddress;\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 185,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 185,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This will provide the AToken address, which is required for interacting with the Aave Pool.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 191,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"A Cool Tip\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 193,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"Did you know that the \", _jsxDEV(_components.a, {\n          href: \"https://staging.aave.com/\",\n          children: \"Official Aave Testnet UI\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), \" supports Scroll Sepolia? After supplying tokens you will be able to see your position in the UI. Also, you can mint testnet DAI on \", _jsxDEV(_components.a, {\n          href: \"https://staging.aave.com/faucet/\",\n          children: \"The aave faucet\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 195,\n          columnNumber: 210\n        }, this), \" in order to test your code.\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 195,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 195,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Building the Contract\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 197,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: _jsxDEV(_components.strong, {\n            children: \"Implement the deposit function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 199,\n            columnNumber: 4\n          }, this)\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 199,\n          columnNumber: 4\n        }, this), \"\\n\", _jsxDEV(_components.ul, {\n          children: [\"\\n\", _jsxDEV(_components.li, {\n            children: \"Transfer the DAI tokens to this contract.\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 200,\n            columnNumber: 5\n          }, this), \"\\n\", _jsxDEV(_components.li, {\n            children: \"Approve the Aave Pool contract to manage the deposited DAI.\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 201,\n            columnNumber: 5\n          }, this), \"\\n\", _jsxDEV(_components.li, {\n            children: [\"Call the \", _jsxDEV(_components.code, {\n              children: \"supply()\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 202,\n              columnNumber: 16\n            }, this), \" function on behalf of the transaction sender.\"]\n          }, undefined, true, {\n            fileName: \"<source.js>\",\n            lineNumber: 202,\n            columnNumber: 5\n          }, this), \"\\n\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 200,\n          columnNumber: 5\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 199,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: _jsxDEV(_components.strong, {\n            children: \"Implement the withdraw function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 204,\n            columnNumber: 4\n          }, this)\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 204,\n          columnNumber: 4\n        }, this), \"\\n\", _jsxDEV(_components.ul, {\n          children: [\"\\n\", _jsxDEV(_components.li, {\n            children: \"Transfer the aDAI tokens (the AToken) for withdrawal.\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 205,\n            columnNumber: 5\n          }, this), \"\\n\", _jsxDEV(_components.li, {\n            children: \"Approve the Aave Pool contract to manage the aDAI.\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 206,\n            columnNumber: 5\n          }, this), \"\\n\", _jsxDEV(_components.li, {\n            children: [\"Call the \", _jsxDEV(_components.code, {\n              children: \"withdraw()\"\n            }, undefined, false, {\n              fileName: \"<source.js>\",\n              lineNumber: 207,\n              columnNumber: 16\n            }, this), \" function to receive DAI back.\"]\n          }, undefined, true, {\n            fileName: \"<source.js>\",\n            lineNumber: 207,\n            columnNumber: 5\n          }, this), \"\\n\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 205,\n          columnNumber: 5\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 204,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 199,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Further Reading\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 209,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: _jsxDEV(_components.a, {\n          href: \"https://docs.aave.com/developers/getting-started/contracts-overview\",\n          children: \"Aave v3 Official Documentation\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 211,\n          columnNumber: 4\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 211,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: _jsxDEV(_components.a, {\n          href: \"https://docs.aave.com/developers/tokens/atoken\",\n          children: \"About ATokens\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 212,\n          columnNumber: 4\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 212,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 211,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component, place) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\" + (place ? \"\\nIt’s referenced in your code at `\" + place + \"`\" : \"\"));\n}\n",
      "frontmatter": {},
      "scope": {}
    }
  }
]