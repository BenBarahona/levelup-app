[
  {
    "id": "borrowing",
    "name": "Borrowing in 5 Levels",
    "index": 1,
    "level": 1,
    "website": "https://github.com/orgs/LevelUpWeb3/repositories",
    "docs": "https://github.com/orgs/LevelUpWeb3/repositories",
    "summary": "Take this challenge to master lending in 5 levels",
    "labels": [
      "Defi"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h2, {\n      children: \"What is this Mission About?1\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The summary outlines a progressive learning journey in developing smart contracts for decentralized finance (DeFi), starting from the basics of handling Ethereum transactions, including deposits, withdrawals, and borrowing in Level 1. As learners progress, they delve into handling ERC20 tokens, introduce collateral-based borrowing, and eventually develop advanced collateral management and liquidation strategies, culminating in building a full-featured DeFi lending platform by Level 5. Each level escalates in complexity, from basic transactions to crafting a financial masterpiece that prepares one to be a frontrunner in the blockchain revolution.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Key Features of the Mission\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
      "frontmatter": {},
      "scope": {}
    }
  },
  {
    "id": "vault",
    "name": "Vault",
    "index": 2,
    "level": 2,
    "website": "https://github.com/orgs/LevelUpWeb3/repositories",
    "docs": "https://github.com/orgs/LevelUpWeb3/repositories",
    "summary": "Take this challenge to master lending in 5 levels",
    "labels": [
      "Defi"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h2, {\n      children: \"What is this Mission About?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The summary outlines a progressive learning journey in developing smart contracts for decentralized finance (DeFi), starting from the basics of handling Ethereum transactions, including deposits, withdrawals, and borrowing in Level 1. As learners progress, they delve into handling ERC20 tokens, introduce collateral-based borrowing, and eventually develop advanced collateral management and liquidation strategies, culminating in building a full-featured DeFi lending platform by Level 5. Each level escalates in complexity, from basic transactions to crafting a financial masterpiece that prepares one to be a frontrunner in the blockchain revolution.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Key Features of the Mission\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 1: Basic Lending and Borrowing Contract üöÄ\\nKick off your smart contract journey by understanding the basics: wax on, wax off! In Level 1, you're diving headfirst into Ethereum's world, creating a contract about the basics: depositing, withdrawing, and borrowing ETH. It's your first step in mastering the blockchain arena, where every line of code counts.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 2: Introducing ERC20 Token Handling üåå\\nElevate your game in Level 2 by tackling the universe of ERC20 tokens. This level is all about adaptation and expansion ‚Äì you'll modify your contract to handle these popular tokens, learning the ropes of real-world crypto transactions. It's your gateway to understanding the vast landscape of digital assets.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 11,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 3: Borrowing Against Collateral üí™\\nGet ready to level up in Level 3! Here, you'll bring collateral into the mix, adding a layer of complexity to your contract. This is where you start playing with the big guns, introducing collateral-based borrowing and planting your feet firmly in the world of risk and reward.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 4: Advanced Collateral and Liquidation Mechanics üåü\\nIt's time to push the boundaries in Level 4. Here, you'll weave advanced collateral management and liquidation strategies into your contract. This level is about fine-tuning your skills and diving deep into the mechanics that make DeFi tick. You're not just building a contract; you're crafting a financial masterpiece.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 17,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 5: Full-Featured DeFi Contract üèÜ\\nReach the pinnacle of your smart contract journey in Level 5. This is where you put it all together, building a DeFi lending platform that's robust, complex, and ready for the real world. You'll integrate everything you've learned, proving that you're not just a participant in the blockchain revolution ‚Äì you're a frontrunner.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
      "frontmatter": {},
      "scope": {}
    }
  },
  {
    "id": "Staking-Level-1",
    "name": "staking level 1",
    "index": 3,
    "website": "https://github.com/orgs/LevelUpWeb3/repositories",
    "heroImage": "/heros/test.jpg",
    "docs": "https://github.com/orgs/LevelUpWeb3/repositories",
    "summary": "Take this challenge to master staking level 1",
    "labels": [
      "Defi"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    h3: \"h3\",\n    h4: \"h4\",\n    code: \"code\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"üöÄ Master Staking Contracts\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 1,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Welcome to the Level 1 of an exciting mission of Level Up!\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 3,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"For many of you, the world of DeFi (Decentralized Finance) and staking might be familiar territories. Staking is a core component in DeFi, allowing users to earn rewards on their cryptocurrency holdings. Ready to dive deeper?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 5,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let‚Äôs embark on this adventure! üöÄ\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 7,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"High Level Structure\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 9,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: \"Guide: Start your journey by exploring the guide. It covers the essentials of staking, including what staking is, how it works, and the role it plays in DeFi.\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 11,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 11,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: \"Assignment: Move on to the hands-on assignment. You will apply your newfound knowledge by developing your own staking contract. This includes creating a contract that allows users to stake tokens and withdraw their stake. You‚Äôll deploy this to the Scroll Sepolia Testnet using Foundry.\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 13,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 11,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Challenge Level\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 15,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Level 1: Mastering the Basics of Staking\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 17,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h4, {\n      children: [\"Building the \", _jsxDEV(_components.code, {\n        children: \"stake()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 19,\n        columnNumber: 19\n      }, this), \" and \", _jsxDEV(_components.code, {\n        children: \"withdraw()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 19,\n        columnNumber: 33\n      }, this), \" Functions\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 19,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.strong, {\n        children: \"Objective:\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 1\n      }, this), \" Dive deep into the world of staking and withdrawing the existing positions.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: [_jsxDEV(_components.strong, {\n        children: \"Assignment:\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 1\n      }, this), \" Upon grasping the basics, put the theory into practice. Build your basic functions to open and close staking positions.\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Conclusion\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"This mission is a pivotal step in your journey towards becoming a proficient smart contract developer. The skills and insights you gain here will not only be applicable in upcoming challenges but will also provide a strong foundation for your future projects in the world of DeFi.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Embrace this opportunity to learn and grow. The path may be challenging, but the rewards of your development journey will be immense. Let's innovate and shape the future of finance together!\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 28,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
      "frontmatter": {},
      "scope": {}
    }
  },
  {
    "id": "lending",
    "name": "Lending in 5 Levels",
    "index": 3,
    "level": 3,
    "website": "https://github.com/orgs/LevelUpWeb3/repositories",
    "docs": "https://github.com/orgs/LevelUpWeb3/repositories",
    "summary": "Take this challenge to master lending in 5 levels",
    "labels": [
      "Defi"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h2, {\n      children: \"What is this Mission About?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The summary outlines a progressive learning journey in developing smart contracts for decentralized finance (DeFi), starting from the basics of handling Ethereum transactions, including deposits, withdrawals, and borrowing in Level 1. As learners progress, they delve into handling ERC20 tokens, introduce collateral-based borrowing, and eventually develop advanced collateral management and liquidation strategies, culminating in building a full-featured DeFi lending platform by Level 5. Each level escalates in complexity, from basic transactions to crafting a financial masterpiece that prepares one to be a frontrunner in the blockchain revolution.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Key Features of the Mission\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 1: Basic Lending and Borrowing Contract üöÄ\\nKick off your smart contract journey by understanding the basics: wax on, wax off! In Level 1, you're diving headfirst into Ethereum's world, creating a contract about the basics: depositing, withdrawing, and borrowing ETH. It's your first step in mastering the blockchain arena, where every line of code counts.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 2: Introducing ERC20 Token Handling üåå\\nElevate your game in Level 2 by tackling the universe of ERC20 tokens. This level is all about adaptation and expansion ‚Äì you'll modify your contract to handle these popular tokens, learning the ropes of real-world crypto transactions. It's your gateway to understanding the vast landscape of digital assets.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 11,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 3: Borrowing Against Collateral üí™\\nGet ready to level up in Level 3! Here, you'll bring collateral into the mix, adding a layer of complexity to your contract. This is where you start playing with the big guns, introducing collateral-based borrowing and planting your feet firmly in the world of risk and reward.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 14,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 4: Advanced Collateral and Liquidation Mechanics üåü\\nIt's time to push the boundaries in Level 4. Here, you'll weave advanced collateral management and liquidation strategies into your contract. This level is about fine-tuning your skills and diving deep into the mechanics that make DeFi tick. You're not just building a contract; you're crafting a financial masterpiece.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 17,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Level 5: Full-Featured DeFi Contract üèÜ\\nReach the pinnacle of your smart contract journey in Level 5. This is where you put it all together, building a DeFi lending platform that's robust, complex, and ready for the real world. You'll integrate everything you've learned, proving that you're not just a participant in the blockchain revolution ‚Äì you're a frontrunner.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
      "frontmatter": {},
      "scope": {}
    }
  },
  {
    "id": "ERC20",
    "name": "ERC20 Basics",
    "index": 10,
    "lesson": 10,
    "website": "https://github.com/LevelUpWeb3/ERC20-Mission",
    "summary": "Introduction to implementing a basic ERC20 token with minting, burning, transferring, and approving functionalities.",
    "heroImage": "/images/level-up-preview.png",
    "labels": [
      "Defi"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"ERC20 Basics\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"In this challenge, you will implement a basic ERC20 token contract that includes minting, burning, transferring, and approving functionalities. Follow the instructions provided in the comments to complete the contract.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-solidity\",\n        children: \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"./ERC20.sol\\\";\\n\\n// Define your ERC20 token contract\\ncontract MyToken is ERC20 {\\n\\n    // Constructor that mints the initial supply to the deployer of the contract\\n    constructor(uint256 initialSupply) ERC20(\\\"MyToken\\\", \\\"MTK\\\") {\\n        // Mint the initial supply of tokens to the deployer's address\\n    }\\n\\n    // Function to mint new tokens to a specified address\\n    function mint(address to, uint256 amount) public {\\n        // Implement the mint function using the _mint internal function\\n    }\\n\\n    // Function to burn tokens from a specified address\\n    function burn(address from, uint256 amount) public {\\n        // Implement the burn function using the _burn internal function\\n    }\\n\\n    // Function to transfer tokens from the caller's address to a specified address\\n    function transfer(address to, uint256 amount) public override returns (bool) {\\n        // Implement the transfer function using the _transfer internal function\\n    }\\n\\n    // Function to approve an address to spend a certain amount of tokens on behalf of the caller\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\n        // Implement the approve function using the _approve internal function\\n    }\\n\\n    // Function to transfer tokens from one address to another using an allowance\\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\\n        // Implement the transferFrom function using the _transfer and _approve internal functions\\n    }\\n}\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 6,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"Instructions\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Constructor:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 49,\n            columnNumber: 4\n          }, this), \" The constructor should initialize the ERC20 token by minting the \", _jsxDEV(_components.code, {\n            children: \"initialSupply\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 49,\n            columnNumber: 86\n          }, this), \" to the deployer's address. Use the \", _jsxDEV(_components.code, {\n            children: \"_mint\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 49,\n            columnNumber: 137\n          }, this), \" function provided by the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 49,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 49,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Mint Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 51,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"mint\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 51,\n            columnNumber: 37\n          }, this), \" function, which should allow you to create new tokens and assign them to a specific address. This function should call the \", _jsxDEV(_components.code, {\n            children: \"_mint\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 51,\n            columnNumber: 167\n          }, this), \" function provided by the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 51,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 51,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Burn Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 53,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"burn\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), \" function, which should allow you to destroy tokens from a specific address, reducing the total supply. Use the \", _jsxDEV(_components.code, {\n            children: \"_burn\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 53,\n            columnNumber: 155\n          }, this), \" function provided by the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 53,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 53,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Transfer Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 55,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"transfer\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 55,\n            columnNumber: 41\n          }, this), \" function to allow the caller to send tokens to another address. Override the \", _jsxDEV(_components.code, {\n            children: \"transfer\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 55,\n            columnNumber: 129\n          }, this), \" function and use the \", _jsxDEV(_components.code, {\n            children: \"_transfer\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 55,\n            columnNumber: 161\n          }, this), \" function from the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 55,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 55,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"Approve Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 57,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 57,\n            columnNumber: 40\n          }, this), \" function, allowing the caller to authorize another address to spend a certain amount of tokens on their behalf. Override the \", _jsxDEV(_components.code, {\n            children: \"approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 57,\n            columnNumber: 175\n          }, this), \" function and use the \", _jsxDEV(_components.code, {\n            children: \"_approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 57,\n            columnNumber: 206\n          }, this), \" function from the ERC20 contract.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 57,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 57,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"\\n\", _jsxDEV(_components.p, {\n          children: [_jsxDEV(_components.strong, {\n            children: \"TransferFrom Function:\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 59,\n            columnNumber: 4\n          }, this), \" Implement the \", _jsxDEV(_components.code, {\n            children: \"transferFrom\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 59,\n            columnNumber: 45\n          }, this), \" function to allow a spender to transfer tokens from one address to another, using an allowance set by the \", _jsxDEV(_components.code, {\n            children: \"approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 59,\n            columnNumber: 166\n          }, this), \" function. Override the \", _jsxDEV(_components.code, {\n            children: \"transferFrom\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 59,\n            columnNumber: 199\n          }, this), \" function and use the \", _jsxDEV(_components.code, {\n            children: \"_transfer\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 59,\n            columnNumber: 235\n          }, this), \" and \", _jsxDEV(_components.code, {\n            children: \"_approve\"\n          }, undefined, false, {\n            fileName: \"<source.js>\",\n            lineNumber: 59,\n            columnNumber: 251\n          }, this), \" functions to implement this functionality.\"]\n        }, undefined, true, {\n          fileName: \"<source.js>\",\n          lineNumber: 59,\n          columnNumber: 4\n        }, this), \"\\n\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 59,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 49,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
      "frontmatter": {},
      "scope": {}
    }
  },
  {
    "id": "swapping",
    "name": "Swap",
    "index": 11,
    "lesson": 11,
    "website": "https://github.com/LevelUpWeb3/ERC20-Mission",
    "summary": "Introduction to implementing a basic swapping contract by understanding Uniswap V2 router.",
    "heroImage": "/images/level-up-preview.png",
    "labels": [
      "Defi"
    ],
    "content": {
      "compiledSource": "/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsxDEV: _jsxDEV} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    ol: \"ol\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(_components.h1, {\n      children: \"Swap\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 2,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Constant Product Formula\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 4,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"The constant product formula is used to calculate how much token B will be received by a user who sends $a$ amount of token A:\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 6,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"$$ a \\\\cdot b = k $$\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Here;\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 10,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"$a$ denotes the amount of token A,\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 12,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"$b$ denotes the amount of token B, and\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 13,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"$k$ is a constant (always).\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 14,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 12,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h3, {\n      children: \"How does it work?\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 16,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Let's say Alice wants to swap her 1 ETH to DAI.\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Alice goes to ETH/DAI pool.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 20,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"For the sake of simplicity, let us assume there are 10 ETH and 25,000 DAI in the pool. Therefore\\n$$k = (10) \\\\times (25,000) = (250,000)$$.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 22,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Alice sends her 1 ETH to the pool.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 25,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 25,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Now, the pool has 11 ETH and 25,000 DAI.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 27,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"The pool sends such amount of DAI to Alice that $k$ remains constant.\\n$$(11) \\\\times (25,000 - amountDAI) = 250,000$$\\n$$amountDAI = 2,272.73$$.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 28,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 27,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Alice receives 2,272.73 DAI for 1 ETH she had.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 32,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ul, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"Now the pool has 11 ETH and 22,727.27 DAI.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 34,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"If you multiply these two numbers, you get the same $k=250,000$.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 35,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: [\"The Essence of the \", _jsxDEV(_components.code, {\n        children: \"swapExactTokensForTokens()\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 37,\n        columnNumber: 23\n      }, this)]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.pre, {\n      children: _jsxDEV(_components.code, {\n        className: \"language-solidity\",\n        children: \"function swapExactTokensForTokens(\\n  uint amountIn,\\n  uint amountOutMin,\\n  address[] calldata path,\\n  address to,\\n  uint deadline\\n) external returns (uint[] memory amounts) {\\n\\n}\\n\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 39,\n        columnNumber: 1\n      }, this)\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 39,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.p, {\n      children: \"Swaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 51,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Key Points\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"As you will use an external function from Uniswap V2 Router, you need to know what kind of new types are needed to implement.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 55,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"Be careful if you need an intermediary step when you build the swapping path (non-WETH case).\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 56,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 55,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Build the Contract\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 58,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: \"As you'll use Uniswap V2 Router, you need to define the contract address of it.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 60,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"For non-WETH cases, you'll need to add an intermediary step into the swapping path, so you need to define WETH address too.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 61,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: [\"Build the function:\\na. Recall from the ERC20 mission that you need token approval.\\nb. Define the swapping path.\\nc. Specify the conditional for the case where no token is WETH.\\nd. Call \", _jsxDEV(_components.code, {\n          children: \"swapExactTokensForTokens()\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 66,\n          columnNumber: 12\n        }, this), \".\"]\n      }, undefined, true, {\n        fileName: \"<source.js>\",\n        lineNumber: 62,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"Define the needed interface for the router.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 67,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: \"Define the needed interface for WETH.\"\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 68,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 60,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.h2, {\n      children: \"Further Reading\"\n    }, undefined, false, {\n      fileName: \"<source.js>\",\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), \"\\n\", _jsxDEV(_components.ol, {\n      children: [\"\\n\", _jsxDEV(_components.li, {\n        children: _jsxDEV(_components.a, {\n          href: \"https://medium.com/@arbnom/navigating-the-defi-landscape-a-comprehensive-deep-dive-to-amms-954020ec23b\",\n          children: \"A Comprehensive Deep Dive to AMMs\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 72,\n          columnNumber: 4\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 72,\n        columnNumber: 1\n      }, this), \"\\n\", _jsxDEV(_components.li, {\n        children: _jsxDEV(_components.a, {\n          href: \"https://docs.uniswap.org/contracts/v2/concepts/protocol-overview/how-uniswap-works\",\n          children: \"How Uniswap works\"\n        }, undefined, false, {\n          fileName: \"<source.js>\",\n          lineNumber: 73,\n          columnNumber: 4\n        }, this)\n      }, undefined, false, {\n        fileName: \"<source.js>\",\n        lineNumber: 73,\n        columnNumber: 1\n      }, this), \"\\n\"]\n    }, undefined, true, {\n      fileName: \"<source.js>\",\n      lineNumber: 72,\n      columnNumber: 1\n    }, this)]\n  }, undefined, true, {\n    fileName: \"<source.js>\",\n    lineNumber: 1,\n    columnNumber: 1\n  }, this);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsxDEV(MDXLayout, Object.assign({}, props, {\n    children: _jsxDEV(_createMdxContent, props, undefined, false, {\n      fileName: \"<source.js>\"\n    }, this)\n  }), undefined, false, {\n    fileName: \"<source.js>\"\n  }, this) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
      "frontmatter": {},
      "scope": {}
    }
  }
]